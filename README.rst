=======
PyMongo
=======
:Info: See `the glitter site <https://glitter-sdk-test.readthedocs.io/en/latest/>`_ for more information. See `GitHub <https://github.com/blockved/glitter-sdk-py>`_ for the latest source.
:Documentation: Available at `pyglitter.readthedocs.io <https://glitter-sdk-test.readthedocs.io/en/latest/>`_
:Author: ted

About
=====
The PyMongo distribution contains tools for interacting with MongoDB
database from Python.  The ``bson`` package is an implementation of
the `BSON format <http://bsonspec.org>`_ for Python. The ``pymongo``
package is a native Python driver for MongoDB. The ``gridfs`` package
is a `gridfs
<http://www.mongodb.org/display/DOCS/GridFS+Specification>`_
implementation on top of ``pymongo``.

PyMongo supports MongoDB 3.6, 4.0, 4.2, 4.4, and 5.0.

Installation
============

PyMongo can be installed with `pip <http://pypi.python.org/pypi/pip>`_::

  $ pip install glitter_sdk


Examples
========
Here's a basic example (for more see the *examples* section of the docs):

.. code-block:: python

  >>> import pymongo
  >>> client = pymongo.MongoClient("localhost", 27017)
  >>> db = client.test
  >>> db.name
  'test'
  >>> db.my_collection
  Collection(Database(MongoClient('localhost', 27017), 'test'), 'my_collection')
  >>> db.my_collection.insert_one({"x": 10}).inserted_id
  ObjectId('4aba15ebe23f6b53b0000000')
  >>> db.my_collection.insert_one({"x": 8}).inserted_id
  ObjectId('4aba160ee23f6b543e000000')
  >>> db.my_collection.insert_one({"x": 11}).inserted_id
  ObjectId('4aba160ee23f6b543e000002')
  >>> db.my_collection.find_one()
  {'x': 10, '_id': ObjectId('4aba15ebe23f6b53b0000000')}
  >>> for item in db.my_collection.find():
  ...     print(item["x"])
  ...
  10
  8
  11
  >>> db.my_collection.create_index("x")
  'x_1'
  >>> for item in db.my_collection.find().sort("x", pymongo.ASCENDING):
  ...     print(item["x"])
  ...
  8
  10
  11
  >>> [item["x"] for item in db.my_collection.find().limit(2).skip(1)]
  [8, 11]

Documentation
=============

Documentation is available at `pymongo.readthedocs.io <https://pymongo.readthedocs.io/en/stable/>`_.

To build the documentation, you will need to install sphinx_.
Documentation can be generated by running **python
setup.py doc**. Generated documentation can be found in the
*doc/build/html/* directory.

Testing
=======

The easiest way to run the tests is to run **python setup.py test** in
the root of the distribution.

To verify that PyMongo works with Gevent's monkey-patching::

    $ python green_framework_test.py gevent

Or with Eventlet's::

    $ python green_framework_test.py eventlet

.. _sphinx: https://www.sphinx-doc.org/en/master/
